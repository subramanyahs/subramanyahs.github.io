{"version":3,"sources":["useAQIAPIs.js","AQIConst.js","CityAQIDetails.js","CityAQI.js","NoDataFound.js","CityAQIList.js","SearchCities.js","App.js","index.js"],"names":["useAQIAPIs","url","data","setData","useState","initial","setInitial","loading","setLoading","error","setError","useEffect","trim","length","async","response","fetch","json","fetchData","TOKEN","CityAQIDetails","props","info","uid","names","React","createElement","Fragment","className","dominentpol","iaqi","ret","Object","entries","map","item","obj","key","v","push","getSpectrum","spectrum","i","name","value","indexOf","colorize","CityAQI","showDetails","setShowDetails","aqi","cityInfo","placeName","station","atTime","time","stime","getCategorizedAQI","impact","catagorized","onClick","moment","format","NoDataFound","CityAQIList","cityList","SearchCities","setUrl","cities","searchText","setSearchText","searchInput","useRef","current","focus","onSubmit","e","preventDefault","type","ref","placeholder","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1be26ce9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useAQIAPIs = (url) => {\n    const [data, setData] = useState({});\n    const [initial, setInitial] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (url.trim().length === 0) {\n            return;\n        }\n        async function fetchData() {\n            try {\n                setInitial(false);\n                setLoading(true);\n                let response = await fetch(url);\n                const json = await response.json();\n                setData(json);\n                setLoading(false);\n            } catch(error) {\n                setError(error);\n            }\n        }\n        \n        fetchData();\n    }, [url]);\n\n    return [ data, loading, initial, error ];\n};\n\nexport { useAQIAPIs };","\nexport const TOKEN = 'd12c0c4e74d6b5e82bd65c6760caaa19412c807b';\nexport const SEARCH_CITIES_BASE_URL = 'https://api.waqi.info/search/';\nexport const FEED_AQI_BASE_URL = 'https://api.waqi.info/feed/@';","import React from 'react';\nimport { useAQIAPIs } from './useAQIAPIs';\n\nimport { TOKEN, FEED_AQI_BASE_URL } from './AQIConst';\n\nconst CityAQIDetails = props => {\n    \n    const [info, error] = useAQIAPIs(\n        `${FEED_AQI_BASE_URL}${props.uid}/?token=${TOKEN}`\n    );\n\n    const names = {\n        'pm25': \"particulate matter 2.5(pm 2.5)\",\n        'pm10': \"particulate matter 10(pm 10)\",\n        'o3': \"Ozone\",\n        'no2': \"Nitrogen Dioxide\",\n        'so2': \"Sulphur Dioxide\",\n        'co': \"Carbon Monoxyde\",\n        't': \"Temperature\",\n        'w': \"Wind\",\n        'r': \"Rain (precipitation)\",\n        'h': \"Relative Humidity\",\n        'd': \"Dew\",\n        'p': \"Atmostpheric Pressure\"\n    }\n    \n    const getSpectrum = iaqi => {\n        let ret = [];\n        Object.entries(iaqi).map(function(item) {\n            let obj = {};\n            let key = names[item[0]] ? names[item[0]] : item[0];\n            obj['key'] = key;\n            obj['value'] = item[1].v;\n            ret.push(obj);\n        });\n        return ret;\n    }\n\n    const colorize = (name, value) => {\n        if ([\n            'particulate matter 2.5(pm 2.5)', \n            'particulate matter 10(pm 10)',\n            'Ozone',\n            'Nitrogen Dioxide',\n            'Sulphur Dioxide',\n            'Carbon Monoxyde'].indexOf(name) < 0) {\n                return '';\n            }\n        if (value >= 0 && value <= 50) {\n            return 'good';\n        } else if (value >= 51 && value <= 100) {\n            return 'moderate';\n        } else if (value >= 101 && value <= 150) {\n            return 'unhealthy-sentitive';\n        } else if (value >= 151 && value <= 200) {\n            return 'unhealthy';\n        } else if (value >= 201 && value <= 300) {\n            return 'very-unhealthy';\n        } else if (value >= 301) {\n            return 'hazardous';\n        }\n    }\n       \n    \n    return(\n        <React.Fragment>\n            {error}\n        {\n            info.data ?\n                \n                <div className=\"details\">\n                    <span>\n                        Prominent Pollutant is, <b>{ names[info.data.dominentpol] }</b>\n                    </span>\n                    <hr />\n                    <ul>\n                        {\n                            getSpectrum(info.data.iaqi).map((spectrum, i) => (\n                                <li key={i}>\n                                    <span className={`dot ${colorize(spectrum.key, spectrum.value)}`}></span>\n                                    <span>{spectrum.key}</span>: <span>{spectrum.value}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                :\n                <span>Loading...</span>\n        }\n        </React.Fragment>\n        \n        \n    )\n};\n\nexport default CityAQIDetails;","import React, { useState } from 'react';\n\nimport moment from 'moment';\n\nimport CityAQIDetails from './CityAQIDetails';\n\nconst CityAQI = props => {\n    const [showDetails, setShowDetails] = useState(false);\n\n    const aqi = props.cityInfo.aqi;\n    const placeName = props.cityInfo.station.name;\n    const atTime = props.cityInfo.time.stime;\n    const uid = props.cityInfo.uid;\n\n    const getCategorizedAQI = aqi => {\n        let className = 'unknown';\n        let impact = 'Unknown';\n\n        if (aqi >= 0 && aqi <= 50) {\n            impact = 'Good';\n            className = 'good';\n        } else if (aqi >= 51 && aqi <= 100) {\n            impact = 'Moderate';\n            className = 'moderate';\n        } else if (aqi >= 101 && aqi <= 150) {\n            impact = 'Unhealthy for Sensitive Groups';\n            className = 'unhealthy-sentitive';\n        } else if (aqi >= 151 && aqi <= 200) {\n            impact = 'Unhealthy';\n            className = 'unhealthy';\n        } else if (aqi >= 201 && aqi <= 300) {\n            impact = 'Very Unhealthy';\n            className = 'very-unhealthy';\n        } else if (aqi >= 301) {\n            impact = 'Hazardous';\n            className = 'hazardous';\n        }\n        \n        let catagorized = {};\n        catagorized['impact'] = impact;\n        catagorized['className'] = className;\n\n        return catagorized;\n    };\n    \n    const getAtTimeFormatted = time => {\n        return moment(time).format('h:mm:ss a');\n    }\n    return (\n        <div  \n            className={`cityInfo ${getCategorizedAQI(aqi).className}`}\n            onClick={ () => setShowDetails(!showDetails)}>\n            <span>At { getAtTimeFormatted(atTime) }: { placeName } - { aqi }</span>\n            <div><b>{ getCategorizedAQI(aqi).impact }</b></div>\n            { showDetails && <CityAQIDetails uid={ uid } /> }\n        </div>\n    )\n};\n\nexport default CityAQI;","import React from 'react';\n\nconst NoDataFound = () => {\n    return(\n        <h3 className='no-data-found'>\n            <span>No Data Found!</span>\n            <br/>\n            <span>How about trying out another City Name?</span>\n        </h3>\n    )\n};\n\nexport default NoDataFound;","import React from 'react';\n\nimport CityAQI from './CityAQI';\nimport NoDataFound from './NoDataFound';\n\nconst CityAQIList = props => {\n    let  cityList = [];    \n    if (props.data) {\n        cityList = props.data;\n    }\n        \n    return (\n        <div className=\"cityList\">\n            <ul>\n            {\n                cityList.length > 0\n                ?\n                cityList.map((cityInfo, i) => (\n                    <li key={i}>\n                        <CityAQI cityInfo={cityInfo} />\n                    </li>\n                ))\n                :\n                <NoDataFound />\n            }\n            </ul>\n        </div>\n    )\n};\n\nexport default CityAQIList;","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useAQIAPIs } from './useAQIAPIs';\n\nimport { TOKEN, SEARCH_CITIES_BASE_URL } from './AQIConst';\n\nimport CityAQIList from './CityAQIList';\n\nconst SearchCities = () => {\n    const [url, setUrl] = useState('');\n    const [cities , loading, initial, error] = useAQIAPIs(url);\n    const [searchText, setSearchText] = useState('');\n    const searchInput = useRef(null);\n\n    useEffect(() => {\n        searchInput.current.focus();\n    }, []);\n    \n    const searchCityName = (event) => {\n        event.preventDefault();\n        setUrl(`${SEARCH_CITIES_BASE_URL}?token=${TOKEN}&keyword=${searchText}`);\n    }\n\n    const handleSearchTextChange = (event) => {\n        setSearchText(event.target.value);\n    }\n    return(\n        <div>\n            { error }\n            <form onSubmit={ e => searchCityName(e)}>\n                <label>\n                \n                <input \n                    type=\"text\" \n                    ref={ searchInput }\n                    value={ searchText } \n                    placeholder=\"Enter a City Name\"\n                    onChange={ e => handleSearchTextChange(e) } />\n                </label>\n                <input type=\"submit\" value=\"Search\" />\n            </form>\n            {\n                loading ?\n                    (<span>loading...</span>)\n                    :\n                    !initial && (<CityAQIList data={ cities.data }/>)\n            }\n        </div>\n    )\n};\n\nexport default SearchCities;","import React from 'react';\n\nimport SearchCities from './SearchCities';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1> Air Quality Index </h1>\n      <SearchCities />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}